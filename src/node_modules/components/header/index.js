import React, {Component} from 'react';
import 'grommet-css';

import Header from 'grommet/components/Header';
import Title from 'grommet/components/Title';
import Box from 'grommet/components/Box';
import Menu from 'grommet/components/Menu';
import Anchor from 'grommet/components/Anchor';
import LoginIcon from 'grommet/components/icons/base/Login';
import MailIcon from 'grommet/components/icons/base/Mail';
import WorkshopIcon from 'grommet/components/icons/base/Workshop';
import LogoutIcon from 'grommet/components/icons/base/Logout';
import AddIcon from 'grommet/components/icons/base/Add';
import Modal from 'components/modal';
import ModalAuth from 'components/modalAuth';
import ModalUpload from 'components/modalUpload';

class HeaderPages extends Component {

    constructor(props) {
        super(props);
        this.state = {
            showReg: true,
            showAuth: true,
            showUpload: true,
            cookie: null
        };
        this.changeShowReg = this.changeShowReg.bind(this);
        this.changeShowAuth = this.changeShowAuth.bind(this);
        this.changeShowUpload = this.changeShowUpload.bind(this);
    }

    componentDidMount() {
       this.setState({
           cookie: this.convertCookie()
       })
    }

    changeShowReg() {
        this.setState({
            showReg: true
        });
    }
    changeShowAuth() {
        this.setState({
            showAuth: true
        });
    }

    changeShowUpload() {
        this.setState({
            showUpload: true
        });
    }

    convertCookie() {
        let output = {};
        document.cookie.split(/\s*;\s*/).forEach((pair) => {
            pair = pair.split(/\s*=\s*/);
            output[pair[0]] = pair.splice(1).join('=');
        });
        return output.token
    }

     render() {
        return (
            <Header>
                <Title>
                    BSTU
                </Title>
                <Box flex={true}
                     justify='end'
                     direction='row'
                     responsive={true}>
                    <Menu responsive={true}
                          dropAlign={{"right": "right"}}
                          direction='row'>
                        {
                            this.state.cookie ?
                                <div>
                                    <Anchor icon={<WorkshopIcon />}
                                            onClick = {() => this.setState({ showUpload: false })} />
                                    <Anchor icon={<MailIcon />}
                                            onClick = {() => {
                                                document.cookie =  'token=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                                                window.location.href = "/";
                                            }} />
                                <Anchor icon={<LogoutIcon />}
                                                        onClick = {() => {
                                                            document.cookie =  'token=;expires=Thu, 01 Jan 1970 00:00:01 GMT;';
                                                            window.location.href = "/";
                                                        }} />
                            </div>  :
                                <div>
                                <Anchor icon={<AddIcon />}
                                                                              onClick = {() => this.setState({ showReg: false })} />
                                <Anchor icon={<LoginIcon />}
                                        onClick = {() => this.setState({ showAuth: false })} />
                            </div>
                        }

                    </Menu>
                    <Modal showReg = {this.state.showReg} props = {this.props} changeShowReg = {this.changeShowReg}/>
                    <ModalAuth showAuth = {this.state.showAuth} props = {this.props} changeShowAuth = {this.changeShowAuth}/>
                    <ModalUpload convertCookie = {this.convertCookie} showUpload = {this.state.showUpload} props = {this.props} changeShowUpload = {this.changeShowUpload}/>
                </Box>
            </Header>
        )
    }


}

export default HeaderPages