import React, {Component} from 'react';
import {connect} from 'react-redux';
import {uploadForm} from 'actions/uploadForm';
import {uploadForm as uploadFormSelector} from 'selectors';

import 'grommet-css';
import Form from 'components/regForm';
import Toast from 'grommet/components/Toast';

class RegForm extends Component {

    constructor() {
        super();
        this.state = {
            isReg: null
        }
    }

    sendData(obj)
    {
        this.props.uploadForm(obj, '/reg');
    }

    componentWillReceiveProps(nextProps) {
        if(nextProps.register.status) {
            this.setState({isReg: true})
        } else {
            this.setState({isReg: false})
        }
    }

    render () {
        return (
            <div>
                { this.state.isReg === false && <Toast onClose={() => this.setState({ isReg: null}) } status='critical'>
                    Такой пользователь уже существует! </Toast>}
                { this.state.isReg === true && <Toast onClose={() => this.setState({ isReg: null}) } status= 'ok'>
                    Вы зарегистрированы! </Toast>}
            <Form props = {this.props} uploadForm = {this.sendData}/>
            </div>
        )
    };
}

const mapDispatchToProps = {
    uploadForm,
};

export const mapStateToProps = state => ({
    register: uploadFormSelector(state),
});

export default connect(mapStateToProps, mapDispatchToProps)(RegForm)